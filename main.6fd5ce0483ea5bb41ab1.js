!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._messageErrorClass=e.messageErrorClass,this._formElement=n,this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector))}var n,r;return n=t,(r=[{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._messageErrorClass),t.textContent=""}},{key:"resetErrors",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._messageErrorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"disableButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","true")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButton():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"enableValidation",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){var r=t.cardData,o=t.userId,i=t.handleCardClick,a=t.handleLikeClick,c=t.handleDeleteIconClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=r.name,this._link=r.link,this._cardLikes=r.likes,this._ownerId=r.owner._id,this._handleCardClick=i,this._handleLikeClick=a,this._handleDeleteIconClick=c,this._templateSelector=n,this.cardId=r._id,this._userId=o}var t,r;return t=e,(r=[{key:"_hasMyLike",value:function(){var e=this;return this._cardLikes.find((function(t){return t._id==e._userId}))}},{key:"_setLike",value:function(e){e?this._cardHeart.classList.add("card__heart_active"):this._cardHeart.classList.remove("card__heart_active")}},{key:"updateLike",value:function(e){this._cardLikes=e,this._numberOfLikes=e.length,this._cardLikeCounter.textContent=this._numberOfLikes,this._hasMyLike()?this._setLike(!0):this._setLike(!1)}},{key:"createCard",value:function(){var e=this;this.cardElement=document.querySelector(this._templateSelector).content.firstElementChild.cloneNode(!0);var t=this.cardElement.querySelector(".card__remove-button");return this._cardTitle=this.cardElement.querySelector(".card__title"),this._cardImage=this.cardElement.querySelector(".card__image"),this._cardHeart=this.cardElement.querySelector(".card__heart"),this._cardLikeCounter=this.cardElement.querySelector(".card__like-counter"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this.updateLike(this._cardLikes),this._ownerId==this._userId?t.addEventListener("click",(function(){return e._handleDeleteIconClick(e)})):t.remove(),this._cardImage.addEventListener("click",(function(){return e._handleCardClick(e._name,e._link)})),this._cardHeart.addEventListener("click",(function(t){e._handleLikeClick(e,t.target.classList.contains("card__heart_active"))})),this.cardElement}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"rendererItem",value:function(e){return this._renderer(e)}},{key:"renderInitialItems",value:function(){var e=this,t=[];return this._initialItems.forEach((function(n){return t.push(e._renderer(n))})),t}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popupElement.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup__close-button")&&e.close()})),this._popupElement.addEventListener("mousedown",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function p(e,t){return p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},p(e,t)}function h(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._enlargedImage=t._popupElement.querySelector(".popup__enlarged-image"),t._imagePopupTitle=t._popupElement.querySelector(".popup__title_type_image"),t}return t=a,(n=[{key:"open",value:function(e,t){this._enlargedImage.src=t,this._enlargedImage.alt=e,this._imagePopupTitle.textContent=e,l(d(a.prototype),"open",this).call(this)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=v(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function E(e,t){return E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},E(e,t)}function k(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitHandlerForm=t,n._inputList=Array.from(n._popupElement.querySelectorAll(".popup__input")),n._formElement=n._popupElement.querySelector(".popup__form"),n._submitButton=n._formElement.querySelector(".popup__submit-button"),n._initialSubmitButtonText=n._submitButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputList.forEach((function(t){return e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;b(g(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){e._submitHandlerForm(t,e._getInputValues())}))}},{key:"renderLoading",value:function(){this._submitButton.textContent="Сохранение..."}},{key:"close",value:function(){this._formElement.reset(),this._submitButton.textContent=this._initialSubmitButtonText,b(g(a.prototype),"close",this).call(this)}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){var n=t.nameSelector,r=t.infoSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._infoElement=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserId",value:function(){return this._userId}},{key:"setUserId",value:function(e){this._userId=e}},{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,info:this._infoElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._infoElement.textContent=n}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),C={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",inputErrorClass:"popup__input_type_error",messageErrorClass:"popup__error-message_visible"},O=document.querySelector(".profile"),I=O.querySelector(".profile__image"),P=O.querySelector(".profile__image-edit-button"),j=O.querySelector(".profile__edit-button"),B=O.querySelector(".profile__add-button"),q=document.querySelector(".popup_profile").querySelector(".popup__form"),T=q.querySelector(".popup__input_field_name-profile"),R=q.querySelector(".popup__input_field_about-profile");function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=A(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(this,arguments)}function A(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}function F(e,t){return F=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},F(e,t)}function H(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return H(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitHandlerForm=t,n._submitButtonElement=n._popupElement.querySelector(".popup__submit-button"),n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;this._submitButtonElement.addEventListener("click",(function(t){e._submitHandlerForm(t,e._confirmationData)})),D(V(a.prototype),"setEventListeners",this).call(this)}},{key:"open",value:function(e){D(V(a.prototype),"open",this).call(this),this._confirmationData=e}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(c);function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var M=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkPromise",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"users/me"),{method:"GET",headers:this._headers}).then(this._checkPromise)}},{key:"changeUserInfo",value:function(e){return fetch("".concat(this._baseUrl,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkPromise)}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._baseUrl,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkPromise)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"cards"),{method:"GET",headers:this._headers}).then(this._checkPromise)}},{key:"setLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkPromise)}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkPromise)}},{key:"addCard",value:function(e){return fetch("".concat(this._baseUrl,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkPromise)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkPromise)}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41/",headers:{authorization:"7a2dc15d-d1bf-4fc7-a20c-343b3e4fd575","Content-Type":"application/json"}}),G=new L({nameSelector:".profile__name",infoSelector:".profile__info"}),z=new w(".popup_image-profile",(function(e,t){var n=t.profileImageLink;e.preventDefault(),z.renderLoading(),M.changeAvatar({avatar:n}).then((function(e){I.src=e.avatar})).catch((function(e){return console.log(e)})).finally((function(){z.close()}))})),K=new w(".popup_profile",(function(e,t){var n=t.userName,r=t.aboutUser;e.preventDefault(),K.renderLoading(),M.changeUserInfo({name:n,about:r}).then((function(e){var t=e.name,n=e.about;return G.setUserInfo({name:t,about:n})})).catch((function(e){return console.log(e)})).finally((function(){K.close()}))})),Q=new _(".popup_image"),W=new N(".popup_confirmation",(function(e,t){e.preventDefault(),M.deleteCard(t.cardId).then((function(){t.cardElement.remove(),t.cardElement=null})).catch((function(e){return console.log(e)})).finally((function(){return W.close()}))})),X=Array.from(document.querySelectorAll(C.formSelector)),Y={};function Z(e){return new r({cardData:e,userId:G.getUserId(),handleCardClick:ee,handleLikeClick:te,handleDeleteIconClick:$},".card-template")}function $(e){W.open(e)}function ee(e,t){Q.open(e,t)}function te(e,t){(t?M.removeLike(e.cardId):M.setLike(e.cardId)).then((function(t){e.updateLike(t.likes)})).catch((function(e){return console.log(e)}))}z.setEventListeners(),K.setEventListeners(),Q.setEventListeners(),W.setEventListeners(),M.getUserInfo().then((function(e){I.src=e.avatar,G.setUserId(e._id),G.setUserInfo({name:e.name,about:e.about})})).then((function(){return M.getInitialCards()})).then((function(e){return new i({items:e,renderer:Z},".elements__wrapper")})).then((function(e){var t=new w(".popup_place",(function(n,r){var o=r.placeName,i=r.placeImageLink;n.preventDefault(),t.renderLoading(),M.addCard({name:o,link:i}).then((function(t){var n=e.rendererItem(t);e.addItem(n.createCard())})).catch((function(e){return console.log(e)})).finally((function(){t.close(),Y.popupFormPlace.disableButton()}))}));t.setEventListeners(),e.renderInitialItems().forEach((function(t){e.addItem(t.createCard())})),B.addEventListener("click",(function(){Y.popupFormPlace.disableButton(),Y.popupFormPlace.resetErrors(),t.open()}))})).catch((function(e){return console.log(e)})),j.addEventListener("click",(function(){Y.popupFormProfile.disableButton();var e=G.getUserInfo();T.value=e.name,R.value=e.info,Y.popupFormProfile.resetErrors(),K.open()})),P.addEventListener("click",(function(){Y.popupFormProfileImage.disableButton(),Y.popupFormProfileImage.resetErrors(),z.open()})),X.forEach((function(e){var n=new t(C,e);Y[e.name]=n,n.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,